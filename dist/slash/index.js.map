{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/slash/index.ts"],"names":[],"mappings":";;;AAIO,MAAM,mBAAmB,GAAwB,KAAK,EAAE,MAAc,EAAE,WAAwB,EAAE,EAAE;IAC1G,IAAG,WAAW,CAAC,SAAS,EAAE,EAAC;QAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACpC,IAAG,CAAC,CAAC,CAAC,SAAS;gBAAE,OAAO,KAAK,CAAA;YAC7B,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,WAAW,CAAC,WAAW,CAAA;QACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAG,CAAC,GAAG;YAAE,OAAO;QAEhB,IAAI,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;QAC/D,IAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE;YACzC,OAAO,WAAW,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACpH,SAAS,EAAE,IAAI;aACf,CAAC,CAAA;SACF;QACD,qGAAqG;QACrG,IAAG,GAAG,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,EAAC;YACvC,OAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;SAC9C;QACD,IAAI;YACH,IAAI,GAAG,GAAG,MAAM,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;YACrD,IAAG,GAAG;gBAAE,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;YACpC,IAAG,GAAG,CAAC,OAAO,EAAC;gBAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;aAAE;SACpE;QAAC,OAAO,CAAC,EAAE;YACX,OAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACxH;KACD;AACF,CAAC,CAAA;AA3BY,QAAA,mBAAmB,uBA2B/B","sourcesContent":["import { Client } from \"../client\";\r\nimport { ChannelType, Interaction } from \"discord.js\";\r\n\r\nexport type SlashCommandHandler = (client: Client, message: Interaction) => void\r\nexport const defaultSlashHandler: SlashCommandHandler = async (client: Client, interaction: Interaction) => {\r\n\tif(interaction.isCommand()){\r\n\t\tlet cmd = client.commands.filter(i => {\r\n\t\t\tif(!i.slashData) return false\r\n\t\t\treturn i.slashData.name === interaction.commandName\r\n\t\t})[0];\r\n\t\tif(!cmd) return;\r\n\r\n\t\tlet timeout = cmd.timeouts.get(interaction.member.user.id) ?? 0\r\n\t\tif(!(Date.now() - timeout > cmd.timeout)) {\r\n\t\t\treturn interaction.reply({\r\n\t\t\t\tcontent: client.messages.timeout.replace('{T}', Math.ceil((cmd.timeout - (Date.now() - timeout)) / 1000).toString()),\r\n\t\t\t\tephemeral: true\r\n\t\t\t})\r\n\t\t}\r\n\t\t// @ts-ignore does not exist on thread based text channels however returns falsy value -> logic works\r\n\t\tif(cmd.nsfw && interaction.channel.nsfw){\r\n\t\t\treturn interaction.reply(client.messages.nsfw)\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet msg = await cmd.slashExecute(client, interaction)\r\n\t\t\tif(msg) await interaction.reply(msg)\r\n\t\t\tif(cmd.timeout){ cmd.timeouts.set(interaction.user.id, Date.now()) }\r\n\t\t} catch (e) {\r\n\t\t\treturn interaction.reply(client.messages.error.replace('{E}', `${e}`.substring(0, 1999 - client.messages.error.length)))\r\n\t\t}\r\n\t}\r\n}\r\n"]}