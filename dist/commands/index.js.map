{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/commands/index.ts"],"names":[],"mappings":";;;AACA,2CAAqE;AAYrE,MAAa,OAAO;IACnB,IAAI,CAAS;IACb,WAAW,CAAS;IACpB,IAAI,CAAW;IACf,QAAQ,CAAS;IACjB,KAAK,CAAS;IACd,OAAO,CAAU;IACjB,QAAQ,CAAkC;IAC1C,OAAO,CAAgH;IAEvH,YAAY,OAAoB;QAC/B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAA;QAE9B,IAAG,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAA;SACzC;IACF,CAAC;CACD;AAvBD,0BAuBC;AAIM,MAAM,cAAc,GAAmB,KAAK,EAAE,MAAc,EAAE,OAAgB,EAAE,EAAE;IACxF,IAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE;QAAE,OAAO;IACrF,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACjE,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,CAAA;IAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;IAC5D,IAAG,CAAC,GAAG;QAAE,OAAO;IAEhB,IAAI,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;IAEtD,IAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE;QACzC,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;KACjI;IAED,IAAG,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,wBAAW,CAAC,SAAS,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;QACxF,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;KAC1C;IAED,IAAI;QACH,IAAI,GAAG,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;QAClD,IAAG,GAAG;YAAE,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAChC,IAAG,GAAG,CAAC,OAAO,EAAC;YAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;SAAE;KAClE;IAAC,OAAO,CAAC,EAAE;QACX,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;KACpH;AACF,CAAC,CAAA;AAxBY,QAAA,cAAc,kBAwB1B","sourcesContent":["import { Client } from \"../client\";\r\nimport { BaseMessageOptions, Message, ChannelType} from \"discord.js\";\r\n\r\ninterface CommandOpts {\r\n\tname: string;\r\n\tdescription: string;\r\n\tnsfw?: boolean;\r\n\tcategory: string;\r\n\tusage: string;\r\n\ttimeout?: number;\r\n\texecute: (client: Client, message: Message, args: string[]) => Promise<BaseMessageOptions> | BaseMessageOptions | void;\r\n}\r\n\r\nexport class Command implements CommandOpts {\r\n\tname: string;\r\n\tdescription: string;\r\n\tnsfw?: boolean;\r\n\tcategory: string;\r\n\tusage: string;\r\n\ttimeout?: number;\r\n\ttimeouts?: Map<string, number> | undefined\r\n\texecute: (client: Client, message: Message, args: string[]) => Promise<BaseMessageOptions> | BaseMessageOptions | void;\r\n\r\n\tconstructor(options: CommandOpts) {\r\n\t\tthis.name = options.name;\r\n\t\tthis.description = options.description;\r\n\t\tthis.nsfw = options.nsfw ?? false;\r\n\t\tthis.category = options.category;\r\n\t\tthis.usage = options.usage;\r\n\t\tthis.execute = options.execute\r\n\r\n\t\tif(options.timeout) {\r\n\t\t\tthis.timeout = options.timeout;\r\n\t\t\tthis.timeouts = new Map<string, number>()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type CommandHandler = (client: Client, message: Message) => void\r\n\r\nexport const defaultHandler: CommandHandler = async (client: Client, message: Message) => {\r\n\tif(!message.content.startsWith(client.prefix) || message.channel.isDMBased()) return;\r\n\tlet args = message.content.slice(client.prefix.length).split(\" \")\r\n\tlet command = args.shift()\r\n\tlet cmd = client.commands.filter(i => i.name === command)[0]\r\n\tif(!cmd) return;\r\n\r\n\tlet timeout = cmd.timeouts.get(message.author.id) ?? 0\r\n\r\n\tif(!(Date.now() - timeout > cmd.timeout)) {\r\n\t\treturn message.reply(client.messages.timeout.replace('{T}', Math.ceil((cmd.timeout - (Date.now() - timeout)) / 1000).toString()))\r\n\t}\r\n\r\n\tif(message.channel.type === ChannelType.GuildText && cmd.nsfw && !(message.channel.nsfw)){\r\n\t\treturn message.reply(client.messages.nsfw)\r\n\t}\r\n\r\n\ttry {\r\n\t\tlet msg = await cmd.execute(client, message, args)\r\n\t\tif(msg) await message.reply(msg)\r\n\t\tif(cmd.timeout){ cmd.timeouts.set(message.author.id, Date.now()) }\r\n\t} catch (e) {\r\n\t\treturn message.reply(client.messages.error.replace('{E}', `${e}`.substring(0, 1999 - client.messages.error.length)))\r\n\t}\r\n}\r\n"]}