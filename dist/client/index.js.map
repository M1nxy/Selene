{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/client/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as djs from \"discord.js\";\r\nimport { Command, CommandHandler, defaultHandler } from \"../commands\";\r\nimport { SlashCommandHandler, defaultSlashHandler } from \"../slash\";\r\nimport { Event, eventBinder } from \"../events\";\r\nimport { Interaction, Message, Routes } from \"discord.js\";\r\n\r\ninterface ClientOptions {\r\n\tprefix: string;\r\n\tcommands: Array<Command>;\r\n\tevents?: Array<Event>;\r\n\tclientOpts: djs.ClientOptions\r\n\thandlers?: {\r\n\t\tcommand: CommandHandler,\r\n\t\tslash: SlashCommandHandler\r\n\t}\r\n\t/**\r\n\t * @property {string} timeout {T} The time remaining in seconds\r\n\t * @property {string} nsfw No special properties\r\n\t * @property {string} error {E} The error message\r\n\t */\r\n\tmessages: {\r\n\t\ttimeout: string | 'You need to wait {T} seconds before using this command again.',\r\n\t\tnsfw: string | 'This command can only be run in a channel marked as nsfw.',\r\n\t\terror: string | 'An error occurred: {E}.'\r\n\t}\r\n}\r\n\r\nexport class Client extends djs.Client {\r\n\tprefix: string;\r\n\tcommands: Array<Command>;\r\n\tevents?: Array<Event>;\r\n\thandlers?: {\r\n\t\tcommands: CommandHandler\r\n\t\tslash: SlashCommandHandler\r\n\t}\r\n\tmessages: {\r\n\t\ttimeout: string | 'You need to wait {T} seconds before using this command again.',\r\n\t\tnsfw: string | 'This command can only be run in a channel marked as nsfw.',\r\n\t\terror: string | 'An error occurred: {E}.'\r\n\t}\r\n\tconstructor(opts: ClientOptions) {\r\n\t\tsuper(opts.clientOpts);\r\n\t\tthis.prefix = opts.prefix\r\n\t\tthis.commands = opts.commands;\r\n\t\tthis.events = opts.events;\r\n\t\tthis.messages = opts.messages;\r\n\t\tthis.events.push(\r\n\t\t\tnew Event({\r\n\t\t\t\tname: 'messageCreate',\r\n\t\t\t\texecute: (message: Message) => {\r\n\t\t\t\t\topts.handlers?.command || defaultHandler(this, message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t)\r\n\t\tthis.events.push(\r\n\t\t\tnew Event({\r\n\t\t\t\tname: 'interactionCreate',\r\n\t\t\t\texecute: (interaction: Interaction) => {\r\n\t\t\t\t\topts.handlers?.slash || defaultSlashHandler(this, interaction)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t)\r\n\r\n\t\teventBinder(this)\r\n\t}\r\n\t/**\r\n\t * @description Deploy slash commands to a specific server. Should reflect on discord's end instantly, mostly used for testing.\r\n\t * @param guildId The id of the guild that you wish to deploy to.\r\n\t */\r\n\tasync deployGuild (guildId: string) {\r\n\t\tlet commands = this.commands.map(item => {\r\n\t\t\tif(!item.slashData) return;\r\n\t\t\treturn item.slashData.toJSON()\r\n\t\t}).filter(item => item); // may not pass code review but i like it :eltroll:\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log(`Started refreshing ${commands.length} application (/) commands.`);\r\n\r\n\t\t\tlet data = await this.rest.put(\r\n\t\t\t\tRoutes.applicationGuildCommands(this.application.id, guildId),\r\n\t\t\t\t{ body: commands },\r\n\t\t\t);\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconsole.log(`Successfully reloaded ${data.length} application (/) commands.`);\r\n\t\t}\r\n\t\tcatch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description Deploy slash commands to all servers. May take up to 1 hour to reflect on all regions.\r\n\t */\r\n\tasync deployGlobal () {\r\n\t\tlet commands = this.commands.map(item => { // duplicate fragment :eltroll:\r\n\t\t\tif(!item.slashData) return;\r\n\t\t\treturn item.slashData.toJSON()\r\n\t\t}).filter(item => item);\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log(`Started refreshing ${commands.length} application (/) commands.`);\r\n\r\n\t\t\tlet data = await this.rest.put(\r\n\t\t\t\tRoutes.applicationCommands(this.application.id),\r\n\t\t\t\t{ body: commands },\r\n\t\t\t);\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconsole.log(`Successfully reloaded ${data.length} application (/) commands.`);\r\n\t\t}\r\n\t\tcatch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n}\r\n"]}